version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: heart_prediction
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - heart-prediction-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - PYTHONPATH=/app
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/heart_prediction
      - SECRET_KEY=your-secret-key-change-in-production
    volumes:
      - ./backend/model:/app/model:ro
    depends_on:
      - postgres
# healthcheck:
    #   test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:5000/health')"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3
    #   start_period: 40s
    restart: unless-stopped
    networks:
      - heart-prediction-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    environment:
      - REACT_APP_API_URL=http://localhost:5000
    depends_on:
      - backend
# healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:80/"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3
    #   start_period: 10s
    restart: unless-stopped
    networks:
      - heart-prediction-network

networks:
  heart-prediction-network:
    driver: bridge

volumes:
  model_data:
    driver: local
  postgres_data:
    driver: local